[project]
name = "inversion_ideas"
dynamic = ["version"]
description = "New design ideas for inversion framework."
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
dependencies = [
    "numpy>=2.0.0",
    "scipy",
    "rich",
    "simpeg==0.24.0",
    "discretize==0.11.3",
]

[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme =  "post-release"
local_scheme =  "no-local-version"
write_to =  "src/inversion_ideas/_version.py"

[tool.ruff]
line-length = 88
exclude = [
    "src/inversion_ideas/_version.py",
]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "D",        # pydocstyle
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "FURB",     # refurb
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # numPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "PYI",      # flake8-pyi
  "RET",      # flake8-return
  "RUF",      # ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "ISC001",   # Conflicts with formatter
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "RET504",   # Allow variable assignment only for return
  "PT001",    # Conventions for parenthesis on pytest.fixture
  "D200",     # Allow single line docstrings in their own line
  # Temporary ignores:
  "D102",     # Allow no docstrings in public methods
  "D105",     # Allow no docstrings in magic methods
  "D414",     # Allow empty sections in docstrings
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",   # Disable unused-imports errors on __init__.py
]
"test/**" = [
  "D",   # Ignore pydocstyle warnings in tests
  "T20", # Allow print statements in tests
]
"notebooks/**.ipynb" = [
  "B018",   # Allow unused expression (prints on notebooks)
  "D",   # Ignore pydocstyle warnings in notebooks
  "PD901", # Allow to use df as variables for pandas DataFrames
  "T20",   # Allow print statements in notebooks
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
